plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "org.graalvm.plugin.compiler" version "0.1.0-alpha2"
}

import net.fabricmc.loom.task.RemapJarTask

//version = project.mod_version -> set using "gradlew build '-Pversion=HERE'"
group = project.maven_group

repositories {
    mavenCentral()
}

graal {
    version "22.3.0"
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation 'org.graalvm.js:js:22.3.0'
    implementation 'org.graalvm.sdk:graal-sdk:22.3.0'
    implementation 'org.graalvm.truffle:truffle-api:22.3.0'

    implementation 'net.bytebuddy:byte-buddy-agent:1.12.19'
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
}

shadowJar {
    archiveClassifier.set('shadow')

    dependencies {
        include(dependency("org.graalvm.js:js"))
        include(dependency("org.graalvm.sdk:graal-sdk"))
        include(dependency("org.graalvm.truffle:truffle-api"))

        include(dependency("net.bytebuddy:byte-buddy-agent"))
    }
}

task remapShadowJar(type: RemapJarTask, dependsOn: shadowJar) {
    setInput(shadowJar.archiveFile)
    addNestedDependencies = true
}

build.dependsOn remapShadowJar

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
